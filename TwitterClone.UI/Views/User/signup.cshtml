@model TwitterClone.UI.Models.PersonVM

@{
    ViewBag.Title = "Create";
}

<h2 class="login-box-msg">Join My TwitterClone</h2>

<div class="login-box-body">
    <div class="login-form">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
                <h3 class="login-box-msg">Your Details</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        <span class="text-danger">@Session["ExistingUser"]</span>
                    
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Pwd, htmlAttributes: new { @class = "control-label col-md-2" })
                    
                        @Html.PasswordFor(model => model.Pwd, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                    
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "text-box" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    
                </div>

                <div class="row">
                   
                    <div class="col-xs-4">
                        <input type="submit" name="submit" value="SignUp" id="submit" class="btn btn-success form-save">
                    </div><!-- /.col -->
                </div>

        }
    </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
